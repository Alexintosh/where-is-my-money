{"version":3,"sources":["components/abi.js","components/App.js","components/Create.js","serviceWorker.js","index.js"],"names":["erc20minABI","constant","inputs","name","type","outputs","OMG_TOKEN","address","logoUri","default","symbol","description","decimals","websiteUri","gas","priceOracles","App","state","snippets","walletAddress","tokens","getDataFromDb","fetch","then","json","res","data","filter","r","upvotes","downvotes","filtered","_this","setState","self","this","getDataPromise","loadWalletPromise","loadWalletAddress","customWalletAddress","loadTokenPromise","loadTokens","forEach","token","contractBalances","Map","Promise","all","loadBalances","console","log","map","index","snippet","getContractBalances","balance","set","contract","concat","getBalance","balancePromises","tokenIndex","forceUpdate","resolve","reject","fn","Web3","window","web3","currentProvider","eth","getAccounts","e","addresses","setTimeout","axios","get","response","results","tokenAddress","Contract","methods","balanceOf","call","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","sent","abrupt","Math","pow","stop","_x","apply","arguments","accountAddress","Function","code","indexOf","ens","getAddress","alert","_this2","react_default","createElement","className","src","width","onSubmit","event","preventDefault","resolveCustomWalletAddress","style","onChange","target","value","placeholder","paddingRight","borderRight","length","key","Array","from","values","reduce","b","data-toggle","data-target","id","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","entries","scope","href","Component","Create","intervalIsSet","putDataToDB","url","isLiquid","post","location","reload","upvote","localStorage","setItem","_id","downvote","toggleSnippet","open","react_highlight_default","class","onClick","disabled","getItem","rows","for","document","getElementById","checked","Boolean","hostname","match","ReactDOM","render","react_router_dom","react_router","exact","path","component","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f362e27f.chunk.js","sourcesContent":["let erc20minABI = [\n    // balanceOf\n    {\n      \"constant\":true,\n      \"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\n      \"name\":\"balanceOf\",\n      \"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\n      \"type\":\"function\"\n    },\n    // decimals\n    {\n      \"constant\":true,\n      \"inputs\":[],\n      \"name\":\"decimals\",\n      \"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\n      \"type\":\"function\"\n    }\n  ];\n\n  export { erc20minABI };","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Web3 from 'web3';\nimport {erc20minABI} from \"./abi.js\";\n\nconst OMG_TOKEN = {\n  \"address\": \"0xd26114cd6EE289AccF82350c8d8487fedB8A0C07\",\n  \"logoUri\": \"https://gnosis-safe-token-logos.s3.amazonaws.com/0xd26114cd6EE289AccF82350c8d8487fedB8A0C07.png\",\n  \"default\": false,\n  \"name\": \"OMG\",\n  \"symbol\": \"OMG\",\n  \"description\": \"OmiseGO (OMG) is a public Ethereum-based financial technology for use in mainstream digital wallets\",\n  \"decimals\": 18,\n  \"websiteUri\": \"https://omisego.network\",\n  \"gas\": false,\n  \"priceOracles\": []\n}\n\nclass App extends Component {\n  // initialize our state \n  state = {\n    snippets: [],\n    walletAddress: null,\n    tokens: [],\n  };\n\n  // when component mounts, first thing it does is fetch all existing data in our db\n  // then we incorporate a polling logic so that we can easily see if our db has \n  // changed and implement those changes into our UI\n  componentDidMount() {\n    let self = this;\n    const getDataPromise = this.getDataFromDb();\n    const loadWalletPromise = this.loadWalletAddress().then((address) => {\n      self.setState({walletAddress: address, customWalletAddress: address})\n    });\n    const loadTokenPromise = this.loadTokens().then((tokens) => {\n      tokens.forEach((token) => token.contractBalances = new Map())\n      self.setState({tokens: tokens})\n    });\n\n    Promise.all([loadWalletPromise, loadTokenPromise, getDataPromise]).then(() => {\n      self.loadBalances();\n    })\n  }\n\n  loadBalances() {\n    console.log(\"Load balances \" + this.state.walletAddress)\n    const self = this;\n    const balancePromisesPerToken = self.state.tokens.map((token, index) => {\n      return self.state.snippets.map((snippet) => {\n        console.log(snippet)\n        return self.getContractBalances(token.address, self.state.walletAddress, snippet)\n            .then((balance) => {\n                self.setState((state) => {\n                    state.tokens[index].contractBalances.set(snippet.contract, balance);\n                })\n            })\n      }).concat(self.getBalance(token.address, index)\n        .then((balance) => {\n            self.setState((state) => {\n                state.tokens[index].contractBalances.set(\"ERC20 contract\", balance);\n            })\n        }));\n    })\n\n    balancePromisesPerToken.forEach((balancePromises, tokenIndex) => {\n      Promise.all(balancePromises).then(() => {\n        console.log(\"Load balances completed\")\n        self.forceUpdate();\n      })\n    })\n  }\n\n  // just a note, here, in the front end, we use the id key of our data object \n  // in order to identify which we want to Update or delete.\n  // for our back end, we use the object id assigned by MongoDB to modify \n  // data base entries\n\n  // our first get method that uses our backend api to \n  // fetch data from our data base\n  getDataFromDb = () => {\n    return fetch(\"http://localhost:3001/api/getSnippets\")\n      .then(snippets => snippets.json())\n      .then(res => res.data.filter((r) => r.upvotes >= r.downvotes))\n      .then(filtered => this.setState({ snippets: filtered }));\n  };\n\n  loadWalletAddress() {\n    let promise = new Promise((resolve, reject) => {\n      const fn = () => {\n        const web3 = new Web3(window.web3.currentProvider)\n        web3.eth.getAccounts((e, addresses) => {\n            resolve(addresses[0])\n        });\n      }\n      if (window.web3) {\n        fn();\n      } else {\n        setTimeout(fn, 500);\n      }\n      \n    })\n    return promise\n  }\n\n  loadTokens() {\n    return axios.get('https://safe-relay.gnosis.pm/api/v1/tokens/?limit=5')\n      .then(function (response) {\n        return [OMG_TOKEN].concat(response.data.results)\n    })\n  }\n\n  getBalance(tokenAddress, index) {\n    const web3 = new Web3(window.web3.currentProvider)\n    let contract = new web3.eth.Contract(erc20minABI, tokenAddress);\n    return contract.methods.balanceOf(this.state.walletAddress).call()\n      .then(async (balance) => {\n        const decimals = await contract.methods.decimals.call()\n        return balance / 10**decimals\n      });\n  }\n\n  getContractBalances(tokenAddress, accountAddress, snippet) {\n    const web3 = new Web3(window.web3.currentProvider)\n    return new Function(\"web3\", \"tokenAddress\", \"accountAddress\", snippet.code)(web3, tokenAddress, accountAddress);\n  }\n\n  async resolveCustomWalletAddress(customWalletAddress) {\n      if (customWalletAddress.indexOf('.') !== -1) {\n        const web3 = new Web3(window.web3.currentProvider)\n        customWalletAddress = await web3.eth.ens.getAddress(customWalletAddress)\n        if (!customWalletAddress || customWalletAddress === \"0x0000000000000000000000000000000000000000\") {\n            alert(\"Invalid ENS name\")\n            return;\n        }\n      }\n      this.state.walletAddress = customWalletAddress\n      this.setState(state => {\n          state.tokens.forEach(token => token.contractBalances = new Map())\n      })\n      this.forceUpdate()\n      this.loadBalances()\n  }\n\n\n  // here is our UI\n  // it is easy to understand their functions when you \n  // see them render into our screen\n  render() {\n    const { tokens } = this.state;\n    return (\n      <div>\n        <div className=\"row\">\n          <div className=\"col col-12\">\n              <h1 className=\"text-center\">Where is my money?</h1>\n              <div className=\"text-center\">\n                <img src=\"./img/eyes.gif\" className=\"rounded\" width=\"200px\"></img>\n              </div>\n          </div>\n        </div>\n        <div className=\"row mt-3\">\n          <div className=\"col-6\">\n            <div className=\"text-center\">\n              <form onSubmit={(event) => {\n                  event.preventDefault()\n                  this.resolveCustomWalletAddress(this.state.customWalletAddress)}}\n              >\n                <label>Wallet Address:\n                  <input \n                    type=\"text\" \n                    style={{ width: \"300px\" }}\n                    onChange={e => this.setState({ customWalletAddress: e.target.value })}\n                    value={this.state.customWalletAddress}\n                    placeholder=\"Enter address or ENS name\" />\n                </label>\n                <input type=\"submit\" value=\"Go\" />\n              </form>\n            </div>\n          </div>\n        </div>\n        <div className=\"row mt-3\">\n          <div className=\"col col-6\" style={{ paddingRight: \"20px\", borderRight: \"1px solid #ccc\"}}>\n            <h5>Liquid</h5>\n            <table className=\"table table-hover\">\n              <tbody>{tokens.length <= 0\n                ? <tr><td>Loading Tokens</td></tr>\n                : tokens.map(token => (\n                  <tr key={token.symbol}>\n                    <td>\n                      {token.symbol}\n                    </td>\n                    <td>\n                      {Array.from(token.contractBalances.values()).reduce((a,b) => a + b, 0)}\n                    </td>\n                    <td>  \n                      <button type=\"button\" className=\"btn btn-outline-secondary btn-sm\" data-toggle=\"modal\" data-target={\"#where\".concat(token.symbol)}>Where?</button>\n                      <div className=\"modal fade\" id={\"where\".concat(token.symbol)} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLongTitle\" aria-hidden=\"true\">\n                        <div className=\"modal-dialog\" role=\"document\">\n                          <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                              <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">Where is my {token.symbol}?</h5>\n                              <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                              </button>\n                            </div>\n                            <div className=\"modal-body\">\n                              <table className=\"table table-hover\">\n                              <tbody> {Array.from(token.contractBalances.entries()).map((contract, index) => (\n                                  <tr key={\"balance\".concat(contract[0])}>\n                                    <td>\n                                      {contract[0]}\n                                    </td>\n                                    <td>\n                                      {contract[1]}\n                                    </td>\n                                  </tr>\n                                ))}\n                                <tr>\n                                  <th scope=\"col\">\n                                    Total\n                                  </th>\n                                  <th scope=\"col\">\n                                    {Array.from(token.contractBalances.values()).reduce((a,b) => a + b, 0)}\n                                  </th>\n                                </tr>\n                              </tbody> \n                            </table>\n                            </div>\n                            <div className=\"modal-footer\">\n                              <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </td>    \n                  </tr>\n                ))}</tbody> \n            </table>\n          </div>\n          <div className=\"col col-6\">\n            <h5>Illiquid / locked</h5>\n            <table className=\"table table-hover\">\n              <tbody>\n                <tr>\n                  <td>todo</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <div className=\"row mt-3\">\n          <div className=\"col col-12  text-center\" >\n            <a className=\"btn btn-secondary\" href=\"/create\" role=\"button\">Manage dapps</a>\n          </div>\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;","import React, { Component } from \"react\";\nimport Highlight from 'react-highlight'\n\nimport axios from \"axios\";\n\nclass Create extends Component {\n  // initialize our state \n  state = {\n    snippets: [],\n    intervalIsSet: false,\n    id: 0,\n  };\n\n  componentDidMount() {\n    this.getDataFromDb();\n  }\n\n  // just a note, here, in the front end, we use the id key of our data object \n  // in order to identify which we want to Update or delete.\n  // for our back end, we use the object id assigned by MongoDB to modify \n  // data base entries\n\n  // our first get method that uses our backend api to \n  // fetch data from our data base\n  getDataFromDb = () => {\n    return fetch(\"http://localhost:3001/api/getSnippets\")\n      .then(snippets => snippets.json())\n      .then(res => this.setState({ snippets: res.data }));\n  };\n\n  // our put method that uses our backend api\n  // to create new query into our data base\n  putDataToDB = (contract, code, url, isLiquid) => {\n    axios.post(\"http://localhost:3001/api/putSnippet\", {\n      contract: contract,\n      code: code,\n      url: url,\n      isLiquid: isLiquid\n    }).then(() => {\n      window.location.reload();\n    });\n  };\n\n  upvote = (snippet) => {\n    localStorage.setItem(snippet._id, true);\n    axios.post(\"http://localhost:3001/api/upvote\", {\n      id: snippet._id,\n    })\n    snippet.upvotes++;\n    this.forceUpdate();\n  };\n\n  downvote = (snippet) => {\n    localStorage.setItem(snippet._id, true);\n    axios.post(\"http://localhost:3001/api/downvote\", {\n      id: snippet._id,\n    });\n    snippet.downvotes++;\n    this.forceUpdate();\n  };\n\n  toggleSnippet = (index) => {\n      this.setState((state) => {\n          state.snippets[index].open = !state.snippets[index].open;\n      });\n      this.forceUpdate()\n  }\n\n\n  // here is our UI\n  // it is easy to understand their functions when you \n  // see them render into our screen\n  render() {\n    const { snippets } = this.state;\n    return (\n      <div>\n        <a className=\"btn btn-secondary\" href=\"/\" role=\"button\">Back to main</a>\n        <div className=\"row\">\n          <div className=\"col col-12\">\n              <h2 className=\"text-center\">Manage dapps</h2>\n          </div>\n        </div>\n        <div className=\"row mt-3\">\n          <div className=\"col col-12\">\n            <table className=\"table table-hover\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Dapp</th>\n                  <th scope=\"col\">\n                    Code\n                  </th>\n                  <th scope=\"col\">\n                    Votes\n                  </th>\n                </tr>\n              </thead>\n              <tbody>{snippets.length <= 0\n              ? <tr><td>NO DB ENTRIES YET</td></tr>\n              : snippets.map((snippet, index) => (\n                <tr key={index}>\n                  <td> \n                    {snippet.contract}\n                    {}\n                  </td>\n                  <td>\n                    <button type=\"button\" className=\"btn btn-outline-secondary\" data-toggle=\"modal\" data-target={\"#showCode\".concat(index)}>\n                      Show code\n                    </button>\n                    <div className=\"modal fade\" id={\"showCode\".concat(index)} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLongTitle\" aria-hidden=\"true\">\n                      <div className=\"modal-dialog\" role=\"document\">\n                        <div className=\"modal-content\">\n                          <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">Code for {snippet.contract}</h5>\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                              <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                          </div>\n                          <div className=\"modal-body\">\n                            <Highlight className='js'>\n                              {snippet.code}\n                            </Highlight>\n                          </div>\n                          <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </td>\n                  <td>\n                    <button type=\"button\" class=\"btn btn-link\" onClick={() => this.upvote(snippet)}  disabled={!!localStorage.getItem(snippet._id)}>\n                        <span role=\"img\">👍</span>\n                        <span>{snippet.upvotes} </span>\n                    </button>\n                    <button type=\"button\" class=\"btn btn-link\" onClick={() => this.downvote(snippet)} disabled={!!localStorage.getItem(snippet._id)}>\n                        <span role=\"img\">👎</span>\n                        <span>{snippet.downvotes} </span>\n                    </button>\n                  </td>\n                  </tr>\n                ))}</tbody>\n            </table>\n          </div>\n        </div>\n        <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#addDapp\">\n          Add dapp\n        </button>\n\n        <div className=\"modal fade\" id=\"addDapp\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"addDappTitle\" aria-hidden=\"true\">\n          <div className=\"modal-dialog\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\" id=\"addDappTitle\">Add new dapp</h5>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                \n                <h6>Contract Name:</h6>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"contractInput\"\n                  placeholder=\"Name of dapp\"\n                />\n                <br/>\n                <h6>URL:</h6>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"urlInput\"\n                  // onChange={e => this.setState({ contract: e.target.value })}\n                  placeholder=\"URL of dapp\"\n                />\n                <br/>\n                <h6>Code:</h6>\n                <textarea\n                  rows=\"20\"\n                  id=\"codeInput\"\n                  placeholder=\"Script to fetch balances\"\n                  className=\"form-control\"\n                />\n                <small id=\"codeHelp\" class=\"form-text text-muted\">\n                    Your code must return a promise with the balance. You have the following input objects available: <code>web3</code>, <code>tokenAddress</code>, <code>accountAddress</code>.\n                </small>\n                <br />\n                <div class=\"form-check\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"isLiquidInput\" value=\"true\" />\n                    <label class=\"form-check-label\" for=\"isLiquidInput\">\n                        is locked (illiquid)\n                    </label>\n                </div>\n              </div>\n              <div className=\"modal-footer\">\n                <button type=\"submit\" className=\"btn btn-primary\" data-dismiss=\"modal\" onClick={() => {\n                  this.putDataToDB(\n                      document.getElementById(\"contractInput\").value, \n                      document.getElementById(\"codeInput\").value,\n                      document.getElementById(\"urlInput\").value,\n                      !document.getElementById(\"isLiquidInput\").checked,\n                    );\n                }}>Save</button>\n                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Create;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport App from './components/App'\nimport Create from './components/Create'\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    (\n        <BrowserRouter>\n          <Switch>\n            <Route exact path='/' component={App}/>\n            <Route path='/create' component={Create}/>\n          </Switch>\n        </BrowserRouter>\n    ),\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}