{"version":3,"sources":["components/abi.js","components/App.js","components/Create.js","serviceWorker.js","index.js"],"names":["erc20minABI","constant","inputs","name","type","outputs","OMG_TOKEN","address","logoUri","default","symbol","description","decimals","websiteUri","gas","priceOracles","App","state","snippets","walletAddress","tokens","getDataFromDb","fetch","then","json","res","data","filter","r","upvotes","downvotes","filtered","_this","setState","handleScan","replace","customWalletAddress","window","$","modal","resolveCustomWalletAddress","handleError","err","console","error","self","this","getDataPromise","loadWalletPromise","loadWalletAddress","loadTokenPromise","loadTokens","forEach","token","contractBalances","Map","Promise","all","loadBalances","contract","balance","snippet","find","String","url","log","map","index","getContractBalances","set","concat","getBalance","balancePromises","tokenIndex","forceUpdate","resolve","reject","fn","Web3","web3","currentProvider","eth","getAccounts","e","addresses","setTimeout","axios","get","response","results","tokenAddress","Contract","methods","balanceOf","call","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","sent","abrupt","Math","pow","stop","_x","apply","arguments","accountAddress","Function","code","indexOf","ens","getAddress","alert","_this2","react_default","createElement","className","id","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","lib_default","delay","onError","onScan","src","width","alt","onSubmit","event","preventDefault","style","onChange","target","value","placeholder","data-toggle","data-target","paddingRight","borderRight","length","key","Array","from","values","reduce","b","entries","getClaimBackUrl","href","rel","scope","Component","Create","intervalIsSet","putDataToDB","isLiquid","post","location","reload","upvote","localStorage","setItem","_id","downvote","toggleSnippet","open","react_highlight_default","class","onClick","disabled","getItem","rows","for","document","getElementById","checked","Boolean","hostname","match","ReactDOM","render","react_router_dom","react_router","exact","path","component","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cd339d78.chunk.js","sourcesContent":["let erc20minABI = [\n    // balanceOf\n    {\n      \"constant\":true,\n      \"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\n      \"name\":\"balanceOf\",\n      \"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\n      \"type\":\"function\"\n    },\n    // decimals\n    {\n      \"constant\":true,\n      \"inputs\":[],\n      \"name\":\"decimals\",\n      \"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\n      \"type\":\"function\"\n    }\n  ];\n\n  export { erc20minABI };","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Web3 from 'web3';\nimport {erc20minABI} from \"./abi.js\";\nimport QrReader from 'react-qr-reader'\n\nconst OMG_TOKEN = {\n  \"address\": \"0xd26114cd6EE289AccF82350c8d8487fedB8A0C07\",\n  \"logoUri\": \"https://gnosis-safe-token-logos.s3.amazonaws.com/0xd26114cd6EE289AccF82350c8d8487fedB8A0C07.png\",\n  \"default\": false,\n  \"name\": \"OMG\",\n  \"symbol\": \"OMG\",\n  \"description\": \"OmiseGO (OMG) is a public Ethereum-based financial technology for use in mainstream digital wallets\",\n  \"decimals\": 18,\n  \"websiteUri\": \"https://omisego.network\",\n  \"gas\": false,\n  \"priceOracles\": []\n}\n\nclass App extends Component {\n  // initialize our state \n  state = {\n    snippets: [],\n    walletAddress: null,\n    tokens: [],\n  };\n\n  // when component mounts, first thing it does is fetch all existing data in our db\n  // then we incorporate a polling logic so that we can easily see if our db has \n  // changed and implement those changes into our UI\n  componentDidMount() {\n    let self = this;\n    const getDataPromise = this.getDataFromDb();\n    const loadWalletPromise = this.loadWalletAddress().then((address) => {\n      self.setState({walletAddress: address, customWalletAddress: address})\n    });\n    const loadTokenPromise = this.loadTokens().then((tokens) => {\n      tokens.forEach((token) => token.contractBalances = new Map())\n      self.setState({tokens: tokens})\n    });\n\n    Promise.all([loadWalletPromise, loadTokenPromise, getDataPromise]).then(() => {\n      self.loadBalances();\n    })\n  }\n\n  getClaimBackUrl(contract, balance) {\n    if (balance <= 0) {\n      return \"\";\n    }\n    if (contract === \"ERC20 contract\") {\n      return \"\";\n    }\n    let snippet = this.state.snippets.find(function(snippet) {\n      return String(snippet.contract)===contract;\n    });\n    if (!snippet) {\n      return \"\";\n    }\n    return snippet.url;\n  }\n\n  loadBalances() {\n    console.log(\"Load balances \" + this.state.walletAddress)\n    const self = this;\n    const balancePromisesPerToken = self.state.tokens.map((token, index) => {\n      return self.state.snippets.map((snippet) => {\n        console.log(snippet)\n        return self.getContractBalances(token.address, self.state.walletAddress, snippet)\n            .then((balance) => {\n                self.setState((state) => {\n                    state.tokens[index].contractBalances.set(snippet.contract, balance);\n                })\n            })\n      }).concat(self.getBalance(token.address, index)\n        .then((balance) => {\n            self.setState((state) => {\n                state.tokens[index].contractBalances.set(\"ERC20 contract\", balance);\n            })\n        }));\n    })\n\n    balancePromisesPerToken.forEach((balancePromises, tokenIndex) => {\n      Promise.all(balancePromises).then(() => {\n        console.log(\"Load balances completed\")\n        self.forceUpdate();\n      })\n    })\n  }\n\n  // just a note, here, in the front end, we use the id key of our data object \n  // in order to identify which we want to Update or delete.\n  // for our back end, we use the object id assigned by MongoDB to modify \n  // data base entries\n\n  // our first get method that uses our backend api to \n  // fetch data from our data base\n  getDataFromDb = () => {\n    return fetch(\"api/getSnippets\")\n      .then(snippets => snippets.json())\n      .then(res => res.data.filter((r) => r.upvotes >= r.downvotes))\n      .then(filtered => this.setState({ snippets: filtered }));\n  };\n\n  loadWalletAddress() {\n    let promise = new Promise((resolve, reject) => {\n      const fn = () => {\n        const web3 = new Web3(window.web3.currentProvider)\n        web3.eth.getAccounts((e, addresses) => {\n            resolve(addresses[0])\n        });\n      }\n      if (window.web3) {\n        fn();\n      } else {\n        setTimeout(fn, 500);\n      }\n      \n    })\n    return promise\n  }\n\n  loadTokens() {\n    return axios.get('https://safe-relay.gnosis.pm/api/v1/tokens/?limit=5')\n      .then(function (response) {\n        return [OMG_TOKEN].concat(response.data.results)\n    })\n  }\n\n  getBalance(tokenAddress, index) {\n    const web3 = new Web3(window.web3.currentProvider)\n    let contract = new web3.eth.Contract(erc20minABI, tokenAddress);\n    return contract.methods.balanceOf(this.state.walletAddress).call()\n      .then(async (balance) => {\n        const decimals = await contract.methods.decimals.call()\n        return balance / 10**decimals\n      });\n  }\n\n  getContractBalances(tokenAddress, accountAddress, snippet) {\n    const web3 = new Web3(window.web3.currentProvider)\n    return new Function(\"web3\", \"tokenAddress\", \"accountAddress\", snippet.code)(web3, tokenAddress, accountAddress);\n  }\n\n  async resolveCustomWalletAddress(customWalletAddress) {\n      if (customWalletAddress.indexOf('.') !== -1) {\n        const web3 = new Web3(window.web3.currentProvider)\n        customWalletAddress = await web3.eth.ens.getAddress(customWalletAddress)\n        if (!customWalletAddress || customWalletAddress === \"0x0000000000000000000000000000000000000000\") {\n            alert(\"Invalid ENS name\")\n            return;\n        }\n      }\n      this.state.walletAddress = customWalletAddress\n      this.setState(state => {\n          state.tokens.forEach(token => token.contractBalances = new Map())\n      })\n      this.forceUpdate()\n      this.loadBalances()\n  }\n\n  handleScan = data => {\n    if (data) {\n      const address = data.replace(\"ethereum:\", \"\");\n      this.setState({\n        customWalletAddress: address,\n      })\n      window.$(\"#QR\").modal('hide');\n      this.resolveCustomWalletAddress(address)\n    }\n  }\n  handleError = err => {\n    console.error(err)\n  }\n\n  // here is our UI\n  // it is easy to understand their functions when you \n  // see them render into our screen\n  render() {\n    const { tokens } = this.state;\n    return (\n      <div>\n        <div className=\"modal fade\" id=\"QR\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLongTitle\" aria-hidden=\"true\">\n          <div className=\"modal-dialog\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                  <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">Scan your Address</h5>\n                  <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                  </button>\n              </div>\n              <div className=\"modal-body text-center\">\n                <QrReader\n                  delay={300}\n                  onError={this.handleError}\n                  onScan={this.handleScan}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col col-12\">\n              <h1 className=\"text-center\">Where is my money?</h1>\n              <div className=\"text-center\">\n                <img src=\"./img/eyes.gif\" className=\"rounded\" width=\"200px\" alt=\"eyes\"></img>\n              </div>\n          </div>\n        </div>\n        <br/>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"text-center\">\n              <form onSubmit={(event) => {\n                  event.preventDefault()\n                  this.resolveCustomWalletAddress(this.state.customWalletAddress)}}>\n                <label>Wallet Address:\n                  <input \n                    type=\"text\" \n                    style={{ width: \"400px\" }}\n                    onChange={e => this.setState({ customWalletAddress: e.target.value })}\n                    value={this.state.customWalletAddress}\n                    placeholder=\"Enter address or ENS name\" />\n                </label>\n                &nbsp;\n                <input type=\"submit\" value=\"Go\" />&nbsp;\n                <button type=\"button\" data-toggle=\"modal\" data-target=\"#QR\" >Scan QR</button>\n              </form>\n            </div>\n          </div>\n        </div>\n        <div className=\"row mt-3\">\n          <div className=\"col col-6\" style={{ paddingRight: \"20px\", borderRight: \"1px solid #ccc\"}}>\n            <h5>Liquid</h5>\n            <table className=\"table table-hover\">\n              <tbody>{tokens.length <= 0\n                ? <tr><td>Loading Tokens</td></tr>\n                : tokens.map(token => (\n                  <tr key={token.symbol}>\n                    <td>\n                      {token.symbol}\n                    </td>\n                    <td>\n                      {Array.from(token.contractBalances.values()).reduce((a,b) => a + b, 0)}\n                    </td>\n                    <td>  \n                      <button type=\"button\" className=\"btn btn-outline-secondary btn-sm\" data-toggle=\"modal\" data-target={\"#where\".concat(token.symbol)}>Where?</button>\n                      <div className=\"modal fade\" id={\"where\".concat(token.symbol)} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLongTitle\" aria-hidden=\"true\">\n                        <div className=\"modal-dialog\" role=\"document\">\n                          <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                              <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">Where is my {token.symbol}?</h5>\n                              <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                              </button>\n                            </div>\n                            <div className=\"modal-body\">\n                              <table className=\"table table-hover\">\n                              <tbody> {Array.from(token.contractBalances.entries()).map((contract, index) => (\n                                  <tr key={\"balance\".concat(contract[0])}>\n                                    <td>\n                                      {contract[0]}\n                                    </td>\n                                    <td>\n                                      {contract[1]}\n                                    </td>\n                                    <td>\n                                      {this.getClaimBackUrl(contract[0], contract[1]) ?  \n                                        <a href={this.getClaimBackUrl(contract[0], contract[1])} target=\"_blank\" rel=\"noopener noreferrer\">Claim back!</a>\n                                        : \"-\"}\n                                    </td>\n                                  </tr>\n                                ))}\n                                <tr>\n                                  <th scope=\"col\">\n                                    Total\n                                  </th>\n                                  <th scope=\"col\">\n                                    {Array.from(token.contractBalances.values()).reduce((a,b) => a + b, 0)}\n                                  </th>\n                                  <th scope=\"col\">\n                                  </th>\n                                </tr>\n                              </tbody> \n                            </table>\n                            </div>\n                            <div className=\"modal-footer\">\n                              <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </td>    \n                  </tr>\n                ))}</tbody> \n            </table>\n          </div>\n          <div className=\"col col-6\">\n            <h5>Illiquid / locked</h5>\n            <table className=\"table table-hover\">\n              <tbody>\n                <tr>\n                  <td>todo</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <div className=\"row mt-3\">\n          <div className=\"col col-12  text-center\" >\n            <a className=\"btn btn-secondary\" href=\"/create\" role=\"button\">Manage dapps</a>\n          </div>\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;","import React, { Component } from \"react\";\nimport Highlight from 'react-highlight'\n\nimport axios from \"axios\";\n\nclass Create extends Component {\n  // initialize our state \n  state = {\n    snippets: [],\n    intervalIsSet: false,\n    id: 0,\n  };\n\n  componentDidMount() {\n    this.getDataFromDb();\n  }\n\n  // just a note, here, in the front end, we use the id key of our data object \n  // in order to identify which we want to Update or delete.\n  // for our back end, we use the object id assigned by MongoDB to modify \n  // data base entries\n\n  // our first get method that uses our backend api to \n  // fetch data from our data base\n  getDataFromDb = () => {\n    return fetch(\"http://localhost:3001/api/getSnippets\")\n      .then(snippets => snippets.json())\n      .then(res => this.setState({ snippets: res.data }));\n  };\n\n  // our put method that uses our backend api\n  // to create new query into our data base\n  putDataToDB = (contract, code, url, isLiquid) => {\n    axios.post(\"http://localhost:3001/api/putSnippet\", {\n      contract: contract,\n      code: code,\n      url: url,\n      isLiquid: isLiquid\n    }).then(() => {\n      window.location.reload();\n    });\n  };\n\n  upvote = (snippet) => {\n    localStorage.setItem(snippet._id, true);\n    axios.post(\"api/upvote\", {\n      id: snippet._id,\n    })\n    snippet.upvotes++;\n    this.forceUpdate();\n  };\n\n  downvote = (snippet) => {\n    localStorage.setItem(snippet._id, true);\n    axios.post(\"api/downvote\", {\n      id: snippet._id,\n    });\n    snippet.downvotes++;\n    this.forceUpdate();\n  };\n\n  toggleSnippet = (index) => {\n      this.setState((state) => {\n          state.snippets[index].open = !state.snippets[index].open;\n      });\n      this.forceUpdate()\n  }\n\n\n  // here is our UI\n  // it is easy to understand their functions when you \n  // see them render into our screen\n  render() {\n    const { snippets } = this.state;\n    return (\n      <div>\n        <a className=\"btn btn-secondary\" href=\"/\" role=\"button\">Back to main</a>\n        <div className=\"row\">\n          <div className=\"col col-12\">\n              <h2 className=\"text-center\">Manage dapps</h2>\n          </div>\n        </div>\n        <div className=\"row mt-3\">\n          <div className=\"col col-12\">\n            <table className=\"table table-hover\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Dapp</th>\n                  <th scope=\"col\">\n                    Code\n                  </th>\n                  <th scope=\"col\">\n                    URL\n                  </th>\n                  <th scope=\"col\">\n                    Votes\n                  </th>\n                </tr>\n              </thead>\n              <tbody>{snippets.length <= 0\n              ? <tr><td>NO DB ENTRIES YET</td></tr>\n              : snippets.map((snippet, index) => (\n                <tr key={index}>\n                  <td> \n                    {snippet.contract}\n                  </td>\n                  <td>\n                    <button type=\"button\" className=\"btn btn-outline-secondary\" data-toggle=\"modal\" data-target={\"#showCode\".concat(index)}>\n                      Show code\n                    </button>\n                    <div className=\"modal fade\" id={\"showCode\".concat(index)} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLongTitle\" aria-hidden=\"true\">\n                      <div className=\"modal-dialog\" role=\"document\">\n                        <div className=\"modal-content\">\n                          <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">Code for {snippet.contract}</h5>\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                              <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                          </div>\n                          <div className=\"modal-body\">\n                            <Highlight className='js'>\n                              {snippet.code}\n                            </Highlight>\n                          </div>\n                          <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </td>\n                  <td>\n                    <a href={snippet.url} target=\"_blank\" rel=\"noopener noreferrer\">{snippet.url}</a>\n                  </td>\n                  <td>\n                    <button type=\"button\" class=\"btn btn-link\" onClick={() => this.upvote(snippet)}  disabled={!!localStorage.getItem(snippet._id)}>\n                        <span role=\"img\">👍</span>\n                        <span>{snippet.upvotes} </span>\n                    </button>\n                    <button type=\"button\" class=\"btn btn-link\" onClick={() => this.downvote(snippet)} disabled={!!localStorage.getItem(snippet._id)}>\n                        <span role=\"img\">👎</span>\n                        <span>{snippet.downvotes} </span>\n                    </button>\n                  </td>\n                  </tr>\n                ))}</tbody>\n            </table>\n          </div>\n        </div>\n        <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#addDapp\">\n          Add dapp\n        </button>\n\n        <div className=\"modal fade\" id=\"addDapp\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"addDappTitle\" aria-hidden=\"true\">\n          <div className=\"modal-dialog\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\" id=\"addDappTitle\">Add new dapp</h5>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                \n                <h6>Contract Name:</h6>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"contractInput\"\n                  placeholder=\"Name of dapp\"\n                />\n                <br/>\n                <h6>URL:</h6>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"urlInput\"\n                  placeholder=\"URL of dapp\"\n                />\n                <br/>\n                <h6>Code:</h6>\n                <textarea\n                  rows=\"20\"\n                  id=\"codeInput\"\n                  placeholder=\"Script to fetch balances\"\n                  className=\"form-control\"\n                />\n                <small id=\"codeHelp\" class=\"form-text text-muted\">\n                    Your code must return a promise with the balance. You have the following input objects available: <code>web3</code>, <code>tokenAddress</code>, <code>accountAddress</code>.\n                </small>\n                <br />\n                <div class=\"form-check\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"isLiquidInput\" value=\"true\" />\n                    <label class=\"form-check-label\" for=\"isLiquidInput\">\n                        is locked (illiquid)\n                    </label>\n                </div>\n              </div>\n              <div className=\"modal-footer\">\n                <button type=\"submit\" className=\"btn btn-primary\" data-dismiss=\"modal\" onClick={() => {\n                  this.putDataToDB(\n                      document.getElementById(\"contractInput\").value, \n                      document.getElementById(\"codeInput\").value,\n                      document.getElementById(\"urlInput\").value,\n                      !document.getElementById(\"isLiquidInput\").checked,\n                    );\n                }}>Save</button>\n                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Create;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport App from './components/App'\nimport Create from './components/Create'\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    (\n        <BrowserRouter>\n          <Switch>\n            <Route exact path='/' component={App}/>\n            <Route path='/create' component={Create}/>\n          </Switch>\n        </BrowserRouter>\n    ),\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}